-- 스프링 시큐리티 JWT -- 

스프링 시큐리티 6 프레임워크를 활용하여 JWT 기반의 인증/인가를 구현하고 회원 정보 저장(영속성) MySQL 데이터베이스를 활용한다.

서버는 API 서버 형태로 구축한다. (웹 페이지를 응답하는 것이 아닌 API 클라이언트 요청을 통해 데이터 응답만 확인함)


--------------------------------------------------------------------------------------------------------------

JWT 인증 방식 시큐리티 동작 원리
	: 회원가입 >>  ( 클라이언트에게 폼데이터로 요청받는게 아니라 JSON 으로 요청받는건 다르지만) 내부적인 로직은 세션 방식과 JWT 방식의 차이가 없다.

	: 로그인 (인증) >>  로그인 요청을 받은 후 세션 방식은 서버 세션이 유저 정보를 저장하지만 JWT 방식은 토큰을 생성하여 응답한다.
		: 세션 방식과는 다르게 직접 필터 로직을 작성해야된다
		: UserDetails 구해서 검증하는 것 까지는 세션방식과 같지만, 로그인이 성공했을 떄 그 정보를 저장하는 방식이 다르다.  세션에다가 유저 정보를 저장하지 않고 JWT 토큰을 만들어 response .

	: 경로 접근 (인가) >> JWT Filter를 통해 요청의 헤더에서 JWT를 찾아 검증을하고 일시적 요청에 대한 Session을 생성한다. (생성된 세션은 요청이 끝나면 소멸됨)
		: JWT Filter 우리가 강제로. 필수적으로 커스텀해서 만들어야됨
		: JWT Filter 에서 해당 토큰이 알맞게 존재하고 일치하면 일시적인 세션을 만들고, 특정한 경로로 요청할 경우 그 세션에 정보가 저장되있기 떄문에 그 특정 경로에 접근 가능하게 된다.
		: stateless 로 관리되기 떄문에 단 하나의 세션에 대해서만 일시적으로 만들고 그 요청이 끝나버리면 세션이 다시 사라진다. 



--------------------------------------------------------------------------------------------------------------


